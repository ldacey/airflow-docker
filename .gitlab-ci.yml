image: docker:stable

stages:
  - build
  - push

variables:
  AIRFLOW_COMMIT: $CI_REGISTRY/$CI_PROJECT_PATH:$CI_COMMIT_SHA
  AIRFLOW_IMAGE: $CI_REGISTRY/$CI_PROJECT_PATH:development
  
build_airflow_dev:
  stage: build
  before_script: 
    - echo $CI_JOB_TOKEN | docker login -u gitlab-ci-token --password-stdin $CI_REGISTRY
  only:
    refs: 
      - main
    changes:
      - Dockerfile
      - requirements.txt
      - entrypoint.sh
  script:
    - docker pull $AIRFLOW_IMAGE || true
    - >
      docker build
      .
      --build-arg PYTHON_BASE_IMAGE="python:3.7-slim-buster"
      --build-arg PYTHON_MAJOR_MINOR_VERSION=3.7
      --build-arg AIRFLOW_INSTALL_SOURCES="apache-airflow"
      --build-arg AIRFLOW_INSTALL_VERSION="==1.10.10"
      --build-arg AIRFLOW_EXTRAS="async,aws,azure,celery,dask,jdbc,mysql,postgres,redis,slack,ssh,statsd,virtualenv"
      --build-arg ADDITIONAL_PYTHON_DEPS="requirements.txt"
      --build-arg CONSTRAINT_REQUIREMENTS="https://raw.githubusercontent.com/apache/airflow/1.10.10/requirements/requirements-python3.7.txt"
      --build-arg ENTRYPOINT_FILE="entrypoint.sh"
      --build-arg AIRFLOW_SOURCES_FROM="entrypoint.sh"
      --build-arg AIRFLOW_SOURCES_TO="/entrypoint"
      --pull
      --cache-from $AIRFLOW_IMAGE
      --tag $AIRFLOW_COMMIT
    - docker push $AIRFLOW_COMMIT

push_airflow_dev:
  stage: push
  before_script: 
    - echo $CI_JOB_TOKEN | docker login -u gitlab-ci-token --password-stdin $CI_REGISTRY
  only:
    refs: 
      - main
    changes:
      - Dockerfile
      - requirements.txt
      - entrypoint.sh
  variables:
    GIT_STRATEGY: none
  script:
    - docker pull $AIRFLOW_COMMIT
    - docker tag $AIRFLOW_COMMIT $AIRFLOW_IMAGE
    - docker push $AIRFLOW_IMAGE
    
